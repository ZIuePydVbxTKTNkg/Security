-- This file was generated using Luraph Obfuscator v13.5

return(function(Up,op,Pp,Dp,ap,Op,sp,Jp,mp,ip,ep,wp,zp,pp,Rp,Xp,gp,Wp,Fp,rp,yp,Mp,Lp,hp,dp,Hp,lp,xp,Qp,Vp,tp,Ep,Ap,up,Yp,Zp,qp,kp,Gp,Np,...)local v,I,C=Qp,assert,type;local Bp=(0X0001);local T,b=nil,(nil);local c=error;while Bp~=0x2 do if Bp==0x0 then do b=rp;end;Bp=2;else do T=Xp.byte;end;Bp=0;end;end;local y,X,l=nil,nil,nil;local S=(tonumber);for Tr=0x0,2 do if Tr<=0 then do yend;else if Tr~=0X001 then l=string.match;else do X=lp;end;end;end;end;local p=(setmetatable);local a=rawset;local M=(unpack or table.unpack);do Bp=0X3;end;local Q,o,u=nil,nil,nil;repeat if not(Bp<=0X1)then if Bp~=0X2 then Q=Fp;do Bp=0;end;else u=pp;Bp=0X0001;end;else if Bp==0X0 then o=0X100000000;do Bp=0X2;end;else do break;end;end;end;until false;do Bp=0X1;end;local q,e,r=nil,nil,(nil);repeat if not(Bp<=0)then if Bp==0X1 then q={[Hp]={[0X0]=0,0X1,0X2,3,0X04,5,0x006,7,0X08,ap,0X00A,Op,12,13,0x0E,0XF},{[0]=0X01,Hp,ep,0X2,0X5,0x00004,0X7,6,0X9,0X08,11,0xA,0X00d,12,15,0xe},{[0]=0X0002,3,0X0,1,6,7,up,0X5,0Xa,11,8,0X9,Mp,15,0xC,13},{[0]=3,2,1,0X000,0X00007,6,0X005,4,0xb,0XA,0X09,0X00008,0Xf,0x0000e,0xd,0X0c},{[0X00000]=4,Ep,6,0x00007,0,0X1,2,0X3,12,0x0000D,14,0Xf,0X8,9,0x0a,11},{[0]=0X5,0X00004,7,6,0X1,0X0,0X3,0X2,13,12,15,14,0X0009,0x8,11,0Xa},{[0x00000]=6,0X00007,4,5,2,3,0X00,1,0X000E,15,12,13,0X0a,Op,sp,9},{[0]=0X00007,Pp,Ep,0X4,3,2,0x1,0X0,15,14,0X0d,12,11,0Xa,9,8},{[0]=8,9,0Xa,11,12,0xD,0X0E,15,0X000,0X1,2,3,0x4,5,0X6,0X07},{[0X00]=0X9,8,0Xb,10,0xD,Up,15,14,0X001,0,0X0003,0x0002,0X5,0x4,0X007,0X6},{[0]=10,11,8,0X9,14,0Xf,0Xc,0X00D,yp,0X003,0,0X1,0X6,0X7,4,0X5},{[0]=11,0Xa,0X9,0X8,15,14,13,0Xc,0X3,0X2,0X0001,0X0,0X7,0x6,0X5,4},{[Hp]=0Xc,Dp,14,0Xf,8,0X09,10,11,0X0004,5,0X6,0x7,0X0,0X1,0X2,ep},{[0x00]=0x00d,0x0000c,wp,0xe,9,8,11,10,0X5,0x4,7,0X0006,0X1,0X0,0X3,0x2},{[0]=14,15,0xC,13,10,Op,0X8,9,6,0x0007,4,5,2,3,0X00000,0X1},{[0]=15,0XE,13,0Xc,Op,0xa,0X09,sp,0X7,6,5,4,3,2,0x1,0X00}};Bp=0X2;else do e=Wp;end;do Bp=0;end;end;else do r=string.gsub;end;do Bp=0X0003;end;end;until Bp==0X0003;local s=(getfenv);local O=(ip);local P=(s and s()or _ENV);do Bp=0X2;end;local U,Sp,D=nil,nil,(nil);repeat do if not(Bp<=0X0001)then if Bp<=0X2 then Bp=0;else if Bp~=0X3 then Bp=1;else Sp=function(...)return v('\035',...),{...};end;Bp=0X4;end;end;elseif Bp==0 then U=op;do Bp=3;end;else y=r(b(y,5),"..",function(YN)if T(YN,2)==72 then D=S(b(YN,0X00001,1));do return'';end;else local Y4=(nil);local A4=0X00;do repeat if A4~=0X0 then if D then local Q4,m4=2,nil;while(true)do if not(Q4<=0X0)then if Q4==0x01 then do return m4;end;else do m4=X(Y4,D);end;do Q4=0;end;end;else D=gp;Q4=1;end;end;else return Y4;end;A4=2;else Y4=Q(S(YN,16));do A4=1;end;end;until A4>0X1;end;end;end);break;end;end;until(false);local w=function()local YN=nil;do for tr=0X0,1 do if tr==0x0 then YN=T(y,U,U);else do U=U+1;end;end;end;end;do return YN;end;end;local Y=o-1;local i,H,g,W,G=nil,nil,nil,nil,nil;do for Sq=0,4 do if Sq<=0X1 then do if Sq==0 then i=2147483648;else do H=Yp;end;end;end;else if Sq<=0X2 then g=2^52;else if Sq==3 then do W=function()local jk,Hk,ek,gk,sk=1,nil,nil,nil,nil;repeat if jk<=0x0 then U=U+0X4;jk=0X2;else do if jk~=0X1 then return sk*0X00001000000+gk*65536+ek*0X100+Hk;else Hk,ek,gk,sk=T(y,U,U+0x0003);do jk=0;end;end;end;end;until(false);end;end;else do G={[0x000]=1};end;end;end;end;end;end;local Z=(i-1);do local WC=(0X2);for Yf=op,31 do local sf=(1);do while sf<=0X1 do if sf~=0 then(G)[Yf]=WC;sf=0;else do WC=WC*0X2;end;do sf=2;end;end;end;end;end;end;local R=(function()local hH,HH=W(),W();if HH>=i then HH=HH-o;end;do return HH*o+hH;end;end);Bp=0X0;local h,L=nil,(nil);do repeat if Bp~=0X0000 then L=function()local Eb,lb,Qb,kb,cb,Zb=nil,nil,nil,nil,nil,(nil);for Ka=0X0,0x8 do if not(Ka<=0X3)then do if Ka<=0x005 then if Ka==4 then kb=(-1)^h(Qb,0X1F,1);else do cb=h(Qb,0x00014,11);end;end;elseif not(Ka<=6)then if Ka==7 then do if cb==0x0000 then if Zb==0 then do return kb*0X0;end;else cb=0X1;do lb=Hp;end;end;elseif cb==2047 then do if Zb~=0 then do return kb*(1/0X0);end;else return kb*(0/0);end;end;end;end;else do return kb*(0X00002^(cb-1023))*(Zb/g+lb);end;end;else Zb=h(Qb,0X0000,20)*o+Eb;end;end;else do if Ka<=1 then if Ka==0 then Eb=W();else lb=1;end;else if Ka==0X00002 then Qb=W();else do if not(Eb==0 and Qb==Hp)then else return 0;end;end;end;end;end;end;end;end;do Bp=0X2;end;else do h=function(fH,EH,KH)local oH=(0x1);local JH=nil;do repeat do if not(oH<=0X00)then if oH~=0X1 then do JH=JH-JH%0X0001;end;oH=0;else JH=(fH/G[EH])%G[KH];oH=2;end;else do return JH;end;end;end;until false;end;end;end;Bp=1;end;until Bp>1;end;local t=((Zp or Gp));local x=(t and t[hp]or function(rQ,IQ)local tQ,NQ=nil,(nil);local PQ=(1);repeat if not(PQ<=2)then if not(PQ<=0X00003)then if PQ~=0x04 then return NQ+rQ*tQ+IQ*tQ;else while rQ>0 and IQ>0 do local Cu,tu=nil,(nil);local Zu=(4);do while(true)do if Zu<=0X2 then if not(Zu<=0X000)then if Zu~=0X1 then do NQ=NQ+q[Cu][tu]*tQ;end;Zu=5;else do tQ=tQ*16;end;do break;end;end;else do tu=IQ%0X10;end;Zu=0X2;end;else if not(Zu<=3)then if Zu~=0X4 then do rQ=(rQ-Cu)/16;end;Zu=3;else Cu=rQ%Rp;Zu=0;end;else do IQ=(IQ-tu)/0X000010;end;Zu=1;end;end;end;end;end;PQ=5;end;else NQ=0X0000;PQ=4;end;else if not(PQ<=0x0)then if PQ~=0X1 then tQ=0X1;PQ=0X0;else rQ=rQ%o;PQ=2;end;else IQ=IQ%o;do PQ=0X0003;end;end;end;until false;end);local z=t and t[Lp]or function(i0,Y0)for ol=0X0,0X1 do if ol==0X00 then i0=i0%o;else Y0=Y0%o;end;end;do return((i0+Y0)-x(i0,Y0))/2;end;end;local F=(table.insert);local A=(t and t[qp]or function(ke,ee)ke=ke%o;ee=ee%o;do return Y-z(Y-ke,Y-ee);end;end);local N=(t and t[tp]or function(eR)return Y-(eR%o);end);Bp=0X0;local m,k=nil,(nil);while Bp~=0X02 do do if Bp==0X0000 then do m=t and t[xp];end;Bp=1;else k=t and t[zp];Bp=2;end;end;end;do m=m or function(ha,fa)local Ja=0X01;while Ja<=1 do do if Ja~=0 then if fa>=0x00020 then return 0;end;Ja=0x0;else do if not(fa<0)then else return k(ha,-fa);end;end;Ja=0X002;end;end;end;return(ha*G[fa])%o;end;end;local J,d,E=nil,nil,nil;for tz=0,0X003 do if tz<=0X1 then if tz~=0X00000 then do J={[0]=0x00006,[Ap]=0X0003,[0x004]=7,[7]=8,[1]=5,[3]=4,[0]=0,[0x6]=8,[0x0]=ap,[yp]=0X07,[0x7]=0X00005};end;else k=k or function(WX,rX)local uX,pX=2,(nil);while uX<0x3 do if uX<=0X000 then pX=(WX%o/G[rX]);do uX=3;end;else if uX==1 then if rX<0 then return m(WX,-rX);end;do uX=0X0;end;else if not(rX>=32)then else return 0;end;uX=0x0001;end;end;end;return pX-pX%0X1;end;end;else do if tz~=0X00002 then E=Np;else d=function()local KU,EU=0,0X0;while-1405878417 do local Q8=T(y,U,U);U=U+1;EU=A(EU,m(z(Q8,127),KU));if z(Q8,128)==0X0 then return EU;end;KU=KU+7;end;end;end;end;end;end;Bp=0X000a;local K,V,j,Cp,f,np,Ip,B,vp,Kp,jp,cp=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if not(Bp<=0X0005)then do if Bp<=8 then if not(Bp<=6)then if Bp==7 then Ip=function(PM)local jM={T(y,U,U+0X0003)};local nM=(x(jM[0x1],np));local LM=x(jM[0x002],np);local UM,dM=nil,nil;do for Ev=0X0,0x1 do do if Ev~=0x0 then dM=x(jM[4],np);else do UM=x(jM[0X3],np);end;end;end;end;end;local hM=(2);while(true)do if not(hM<=0)then if hM==1 then do return dM*16777216+UM*0X10000+LM*256+nM;end;else np=(117*np+PM)%0X100;hM=0;end;else U=U+0X04;hM=0x1;end;end;end;Bp=8;else B=function()local JU,gU=0X0002,nil;while(true)do if not(JU<=0X0)then if JU~=1 then gU=d();do JU=0x0;end;else do return gU;end;end;else if gU>Z then return gU-o;end;JU=0X1;end;end;end;Bp=0x1;end;else do f=w();end;Bp=0X00004;end;else do if not(Bp<=0xa)then do if Bp==11 then V={2,0X0003,1};do Bp=0X000;end;else Cp=0X1;Bp=6;end;end;else if Bp~=0X009 then K=mp;Bp=11;else do Kp={};end;do Bp=0X0002;end;end;end;end;end;end;elseif not(Bp<=2)then if not(Bp<=3)then if Bp~=4 then Bp=3;else np=w();Bp=0X7;end;else function cp(yf,xf,ff)local tf,nf,jf=yf[6],yf[5],yf[8];local zf=yf[0x4];local Pf,Wf=yf[0X1],(yf[0X3]);local Hf,df=yf[0X007],yf[9];local ef=p({},{__mode="v"});local Yf=(nil);Yf=function(...)local KD=(1);local iD=((s and s()or _ENV));local rD=({});local GD,CD=Sp(...);GD=GD-0X1;for aZ=0X00000,GD do if tf>aZ then do(rD)[aZ]=CD[aZ+1];end;else do break;end;end;end;(jp)[4]=yf;local mD,LD=(iD==P and ff or iD),0;(jp)[0X1]=rD;if not Pf then CD=nil;elseif not(Wf)then else do(rD)[tf]={n=GD>=tf and GD-tf+1 or 0X0,M(CD,tf+0x00001,GD+0x1)};end;end;if mD==iD then else do if not(E)then _ENV=mD;else(E)(Yf,mD);end;end;end;local YD,FD,uD,hD=K(function()do while true do local S0=Hf[KD];local g0=S0[0X6];KD=KD+0x1;if not(g0<45)then if g0>=67 then if not(g0<0x00004e)then if not(g0>=84)then if not(g0>=0X51)then if g0>=0X4F then if g0==80 then if not(rD[S0[3]]<=rD[S0[2]])then KD=S0[0x01];end;else(rD)[S0[0X00001]]=A(rD[S0[0X3]],rD[S0[0X2]]);end;else local Ok=(S0[1]);rD[Ok](rD[Ok+1]);LD=Ok-1;end;else if g0>=0x0052 then do if g0==0X53 then do(rD)[S0[0X1]]=mD[S0[0x4]];end;else if rD[S0[3]]==S0[0X7]then else KD=S0[1];end;end;end;else do(rD)[S0[1]]={};end;end;end;else do if not(g0<0X000057)then if not(g0>=88)then rD[S0[1]]=k(rD[S0[0X3]],rD[S0[2]]);else if g0~=0X00059 then local fp,Pn=S0[1],S0[0X3];if Pn~=0 then LD=fp+Pn-1;end;local tn,Cn,Wn=S0[0X2],nil,(nil);if Pn~=0X001 then do Cn,Wn=Sp(rD[fp](M(rD,fp+1,LD)));end;else Cn,Wn=Sp(rD[fp]());end;if tn==0X1 then do LD=fp-0X1;end;else do if tn~=0X0 then Cn=fp+tn-0X2;LD=Cn+0X001;else Cn=Cn+fp-1;LD=Cn;end;end;local Ge=0;for Sx=fp,Cn do do Ge=Ge+0x01;end;(rD)[Sx]=Wn[Ge];end;end;else(rD[S0[0x00001]])[S0[4]]=S0[7];end;end;else do if not(g0<85)then do if g0~=0x00056 then local lz=(S0[0X1]);do rD[lz]=rD[lz](rD[lz+1],rD[lz+2]);end;LD=lz;else rD[S0[0X1]]=rD[S0[3]]+S0[7];end;end;else do repeat local By,qy=ef,rD;if not(#By>0X0)then else local mA=({});for g1,u1 in O,By do for xU,oU in O,u1 do do if oU[0X00001]==qy and oU[0X2]>=0 then local gN=oU[0X2];if not(not mA[gN])then else(mA)[gN]={qy[gN]};end;oU[0X001]=mA[gN];do(oU)[2]=1;end;end;end;end;end;end;until true;end;return;end;end;end;end;end;else if not(g0<72)then do if not(g0<0X04b)then if g0>=0X004c then do if g0==77 then local GG=xf[S0[0X3]];rD[S0[0X1]]=GG[0X1][GG[0X2]];else if not(not(rD[S0[3]]<rD[S0[0X2]]))then else KD=S0[1];end;end;end;else(rD)[S0[1]]=rD[S0[3]][rD[S0[0X02]]];end;else if not(g0>=73)then do rD[S0[0X1]]=rD[S0[3]]>=rD[S0[2]];end;else do if g0~=74 then(rD)[S0[1]]=jp[S0[0X03]];else if S0[0X002]~=9 then(rD)[S0[0X1]]=rD[S0[0X03]];else KD=KD-0X001;(Hf)[KD]={[0X1]=(S0[0X1]-137),[3]=(S0[3]-0X089),[6]=0X1a};end;end;end;end;end;end;else if g0>=69 then if g0<70 then LD=S0[1];(rD[LD])();LD=LD-0X1;else if g0~=0X047 then do rD[S0[0x01]]=z(rD[S0[0X3]],rD[S0[2]]);end;else(rD)[S0[1]]=false;end;end;else if g0~=0X044 then local zU=(S0[0X2]-0x00001)*50;local WU=(S0[1]);local OU=(rD[WU]);for Nb=1,LD-WU do do OU[zU+Nb]=rD[WU+Nb];end;end;else local WG=(S0[1]);for Uw=WG,WG+(S0[0x003]-1)do(rD)[Uw]=CD[tf+(Uw-WG)+0X1];end;end;end;end;end;else if g0<0X000038 then if g0>=50 then if g0>=0X35 then if not(g0<54)then if g0~=55 then(rD)[S0[0X1]]=rD[S0[3]]>rD[S0[0X2]];else(rD)[S0[0X1]]=rD[S0[0x3]]*rD[S0[2]];end;else rD[S0[0X0001]]=true;end;else if g0>=51 then if g0==52 then rD[S0[1]]=m(rD[S0[0x3]],rD[S0[2]]);else rD[S0[0x1]]=rD[S0[3]]-S0[0X0007];end;else if S0[0X2]~=195 then for gJ=S0[1],S0[3]do rD[gJ]=nil;end;else KD=KD-0X1;(Hf)[KD]={[0x00001]=(S0[1]-0X094),[0x00006]=0X000b,[0x3]=(S0[3]-148)};end;end;end;else if g0<47 then if g0==46 then rD[S0[1]]=rD[S0[0x03]]<rD[S0[0X0002]];else if S0[2]==0Xe then KD=KD-1;(Hf)[KD]={[1]=(S0[1]-154),[3]=(S0[3]-154),[0X0006]=0X1a};elseif S0[0X002]~=0x7f then do repeat local Ld,rd=ef,rD;if not(#Ld>0x0)then else local Ke=({});for rO,nO in O,Ld do do for gN,LN in O,nO do if LN[0x1]==rd and LN[0X2]>=0X000 then local pG=(LN[0X00002]);if not Ke[pG]then do(Ke)[pG]={rd[pG]};end;end;(LN)[1]=Ke[pG];do(LN)[0x0002]=0x1;end;end;end;end;end;end;until true;end;local rr=S0[0X01];return false,rr,rr;else do KD=KD-1;end;(Hf)[KD]={[0X003]=(S0[0X0003]-0X000A9),[1]=(S0[0x1]-169),[6]=0x3e};end;end;else if not(g0>=48)then do if not(not(rD[S0[3]]<=S0[0X7]))then else KD=S0[1];end;end;else if g0~=0X00031 then rD[S0[0X00001]]=rD[S0[3]]==rD[S0[2]];else rD[S0[0X1]]={M({},1,S0[0X3])};end;end;end;end;else do if g0>=0X3d then if g0>=0x0040 then if g0<65 then local OQ=S0[1];LD=OQ+S0[0X3]-1;do(rD)[OQ]=rD[OQ](M(rD,OQ+1,LD));end;LD=OQ;else do if g0~=66 then local nR=S0[1];local oR=(e(function(...)u();do for Rm,fm,Fm,Nm,Lm in...do u(true,Rm,fm,Fm,Nm,Lm);end;end;end));oR(rD[nR],rD[nR+0x1],rD[nR+0X2]);LD=nR;(rD)[nR]=oR;do KD=S0[0X003];end;else local CG=(S0[0X1]);(rD)[CG]=rD[CG](M(rD,CG+0X001,LD));LD=CG;end;end;end;else if g0>=62 then if g0~=0x3F then if S0[2]~=54 then repeat local KY,FY=ef,(rD);if not(#KY>0)then else local Yg=({});for NZ,yZ in O,KY do for Gg,ag in O,yZ do if ag[0X001]==FY and ag[0x2]>=0X000 then local OH=(ag[0X0002]);if not Yg[OH]then do Yg[OH]={FY[OH]};end;end;(ag)[1]=Yg[OH];(ag)[2]=1;end;end;end;end;until true;local e1=S0[1];do return false,e1,e1+S0[3]-0X0002;end;else KD=KD-1;(Hf)[KD]={[0X6]=0X000022,[0X1]=(S0[1]-0XB1),[3]=(S0[3]-177)};end;else(rD)[S0[0x1]]=rD[S0[3]]+rD[S0[0x2]];end;else local Z5=S0[0X1];LD=Z5+S0[0x3]-0X01;(rD[Z5])(M(rD,Z5+1,LD));LD=Z5-0x0001;end;end;else if g0<0X03A then if g0~=57 then local x2,k2=S0[0X0001],(S0[3]);LD=x2+k2-1;do repeat local XY,pY=ef,rD;if not(#XY>0)then else local ba=({});for fs,zs in O,XY do do for ma,Wa in O,zs do if Wa[0x0001]==pY and Wa[0X2]>=0 then local D9=Wa[0x2];if not ba[D9]then do ba[D9]={pY[D9]};end;end;(Wa)[0X001]=ba[D9];(Wa)[2]=0x1;end;end;end;end;end;until true;end;return true,x2,k2;else rD[S0[1]]=rD[S0[3]]%S0[0X7];end;else if g0>=0X3B then if g0==0X3C then local oT=(S0[1]);(rD[oT])(M(rD,oT+1,LD));LD=oT-1;else local VJ=(S0[0X1]);local BJ=VJ+1;local DJ=(VJ+2);do rD[VJ]=I(S(rD[VJ]),"`for` initial value must be a number");end;(rD)[BJ]=I(S(rD[BJ]),'`\102o\114`\032lim\105\116\032\118alue\032m\117s\116\032\098e \097\032\110\117\109b\101\114');do(rD)[DJ]=I(S(rD[DJ]),"`for` step value must be a number");end;(rD)[VJ]=rD[VJ]-rD[DJ];do KD=S0[3];end;end;else if S0[2]==0x3a then KD=KD-1;Hf[KD]={[0X006]=0X00B,[3]=(S0[0X3]-0XA9),[1]=(S0[0X0001]-169)};elseif S0[0x2]==0X00007e then KD=KD-1;Hf[KD]={[0X1]=(S0[1]-0X029),[6]=74,[0X3]=(S0[3]-0X29)};elseif S0[2]~=200 then(rD)[S0[1]]=-rD[S0[0X003]];else KD=KD-1;Hf[KD]={[1]=(S0[1]-0X44),[3]=(S0[0X3]-68),[0X006]=26};end;end;end;end;end;end;end;else do if g0>=0x16 then do if g0>=33 then if g0>=0X27 then if not(g0>=42)then if not(g0<0X00028)then if g0~=41 then if rD[S0[3]]<=rD[S0[2]]then KD=S0[0x0001];end;else repeat local AZ,FZ=ef,(rD);if#AZ>0X000 then local oZ={};for dW,oW in O,AZ do for cg,xg in O,oW do do if xg[0X0001]==FZ and xg[2]>=0x0000 then local kd=(xg[0x02]);if not oZ[kd]then oZ[kd]={FZ[kd]};end;do(xg)[0X1]=oZ[kd];end;do xg[0X2]=0X1;end;end;end;end;end;end;until true;return true,S0[0X1],0X1;end;else do(rD)[S0[1]]=S0[0X4];end;end;else if g0<43 then rD[S0[1]][rD[S0[0X3]]]=S0[7];else do if g0==0X00002C then if rD[S0[3]]==rD[S0[2]]then else KD=S0[0X01];end;else mD[S0[4]]=rD[S0[0X0001]];end;end;end;end;else do if not(g0<0X24)then if not(g0>=0x25)then do jp[S0[3]]=rD[S0[1]];end;else do if g0==0X26 then(rD)[S0[0X0001]]=rD[S0[3]]-rD[S0[2]];else local ZQ=S0[0x3];(rD)[S0[0X1]]=rD[ZQ]..rD[ZQ+0X1];end;end;end;else if not(g0>=0X22)then local iv=(df[S0[0x3]]);local mv=(nil);local av=iv[0x00002];local vv=(#av);if not(vv>0)then else mv={};for gl=1,vv do local ol=(av[gl]);if ol[0X1]==0 then(mv)[gl-1]={rD,ol[2]};else do(mv)[gl-1]=xf[ol[2]];end;end;end;(F)(ef,mv);end;(rD)[S0[0x1]]=cp(iv,mv,mD);else do if g0~=0X000023 then if S0[0X02]==17 then do KD=KD-1;end;(Hf)[KD]={[6]=11,[0x01]=(S0[1]-0X66),[0X00003]=(S0[0X3]-0X00066)};else rD[S0[0X001]]=#rD[S0[0X03]];end;else local l0=(rD[S0[3]]/rD[S0[0X002]]);rD[S0[0X0001]]=l0-l0%0X1;end;end;end;end;end;end;else if not(g0<0x1B)then do if not(g0>=30)then do if g0>=0X1c then if g0~=0X1d then local kk=S0[1];local qk,Dk,hk,Ik,Mk,Yk=rD[kk]();if not(qk)then else do rD[kk+0X1]=Dk;end;rD[kk+2]=hk;(rD)[kk+3]=Ik;rD[kk+0x4]=Mk;do rD[kk+5]=Yk;end;KD=S0[3];end;else local ke=S0[0X1];local Ee,te,oe=rD[ke]();if not(Ee)then else rD[ke+1]=te;do rD[ke+2]=oe;end;KD=S0[0X00003];end;end;else(rD)[S0[1]]=rD[S0[0x3]]~=rD[S0[2]];end;end;else if not(g0<31)then do if g0==0X20 then do rD[S0[0X001]]=rD[S0[3]]/rD[S0[2]];end;else rD[S0[1]]=N(rD[S0[3]]);end;end;else repeat local ys,Bs=ef,rD;do if not(#ys>0)then else local Cm={};for Uf,Df in O,ys do for O8,u8 in O,Df do if u8[1]==Bs and u8[0X2]>=0X00000 then local XT=u8[0X02];if not Cm[XT]then(Cm)[XT]={Bs[XT]};end;do u8[0X1]=Cm[XT];end;u8[0X2]=1;end;end;end;end;end;until true;return true,S0[0x01],0X000;end;end;end;else if g0>=0X18 then if g0>=0x19 then if g0~=0X00001A then do if S0[0x2]~=0X2 then repeat local KM,OM=ef,rD;do if#KM>0 then local UL=({});for eE,tE in O,KM do for WE,zE in O,tE do if zE[0X1]==OM and zE[2]>=0X00000 then local xQ=zE[2];if not UL[xQ]then(UL)[xQ]={OM[xQ]};end;do zE[1]=UL[xQ];end;(zE)[0X2]=0X1;end;end;end;end;end;until true;return false,S0[1],LD;else KD=KD-0X1;(Hf)[KD]={[6]=0X54,[1]=(S0[0X1]-48),[3]=(S0[3]-0X30)};end;end;else do if S0[0x02]==185 then KD=KD-0x1;do Hf[KD]={[1]=(S0[1]-7),[0X006]=0X0019,[3]=(S0[0x00003]-0X7)};end;elseif S0[0X0002]==48 then KD=KD-0x1;Hf[KD]={[0x3]=(S0[3]-0X71),[1]=(S0[1]-0X71),[0X6]=11};elseif S0[0x0002]==231 then KD=KD-1;Hf[KD]={[3]=(S0[3]-65),[1]=(S0[0X0001]-65),[6]=58};else local X5,x5=S0[0x1],GD-tf;do if not(x5<0X0)then else do x5=-0X1;end;end;end;for XI=X5,X5+x5 do rD[XI]=CD[tf+(XI-X5)+0X1];end;LD=X5+x5;end;end;end;else KD=S0[0X03];end;else do if g0~=0X000017 then if S0[0x2]==220 then KD=KD-1;Hf[KD]={[3]=(S0[0X003]-61),[6]=62,[0X1]=(S0[1]-0X3D)};else repeat local YA,uA,gA=ef,rD,(S0[1]);do if not(#YA>0)then else local m1=({});do for dU,XU in O,YA do do for lc,Uc in O,XU do do if not(Uc[0X1]==uA and Uc[0X02]>=gA)then else local Bi=Uc[0X2];if not(not m1[Bi])then else(m1)[Bi]={uA[Bi]};end;Uc[0x0001]=m1[Bi];(Uc)[2]=1;end;end;end;end;end;end;end;end;until true;end;else rD[S0[0X1]][S0[4]]=rD[S0[0X2]];end;end;end;end;end;end;else if g0<11 then if g0>=5 then if g0<8 then if not(g0<0X6)then if g0~=0X7 then if rD[S0[3]]==S0[0X7]then do KD=S0[0X1];end;end;else(rD)[S0[1]]=rD[S0[0X3]]^rD[S0[2]];end;else if rD[S0[3]]==rD[S0[2]]then KD=S0[1];end;end;else do if g0<0X9 then local TR=S0[1];do rD[TR]=rD[TR](rD[TR+0x001]);end;LD=TR;else if g0==10 then local ig=S0[0x1];local dg=rD[ig+2];local Wg=rD[ig]+dg;do(rD)[ig]=Wg;end;if not(dg>0x0000)then do if not(Wg>=rD[ig+1])then else KD=S0[3];(rD)[ig+3]=Wg;end;end;else if not(Wg<=rD[ig+0X001])then else KD=S0[0X3];do(rD)[ig+3]=Wg;end;end;end;else if S0[0x02]==0X17 then do KD=KD-1;end;Hf[KD]={[0X1]=(S0[1]-73),[6]=0x4a,[3]=(S0[0x3]-0x49)};else rD[S0[0X01]]=not rD[S0[0X3]];end;end;end;end;end;else do if not(g0<2)then do if not(g0>=0x3)then local M8=(S0[0X1]);local K8=(S0[2]-1)*0X32;local X8=(rD[M8]);for PE=0X1,S0[0X03]do(X8)[K8+PE]=rD[M8+PE];end;else if g0~=4 then rD[S0[1]]=rD[S0[0X3]]<=rD[S0[2]];else local wq=(xf[S0[3]]);(wq[0X1])[wq[0x2]]=rD[S0[0X0001]];end;end;end;else if g0==1 then local O4=S0[0X01];local I4=(e(function(...)u();for T2,h2 in...do u(true,T2,h2);end;end));(I4)(rD[O4],rD[O4+1],rD[O4+0x02]);LD=O4;rD[O4]=I4;KD=S0[3];else local tV=S0[3];local IV=rD[tV];do for fp=tV+1,S0[0X02]do do IV=IV..rD[fp];end;end;end;rD[S0[0x1]]=IV;end;end;end;end;else if g0<0X10 then if g0<13 then if g0==12 then do rD[S0[0X0001]][rD[S0[0X3]]]=rD[S0[2]];end;else if S0[0x00002]==212 then KD=KD-1;do(Hf)[KD]={[0X001]=(S0[1]-0X8a),[0X00003]=(S0[0X03]-0X8A),[6]=74};end;elseif S0[0X002]==184 then do KD=KD-0X1;end;(Hf)[KD]={[3]=(S0[3]-0x2),[0X6]=84,[1]=(S0[1]-0x02)};else(rD)[S0[1]]=nil;end;end;else if not(g0<0x00E)then do if g0~=0XF then if not(rD[S0[0X00003]]<rD[S0[2]])then else KD=S0[0x1];end;else do(rD)[S0[1]]=rD[S0[0X3]]%rD[S0[0x2]];end;end;end;else(rD)[S0[0X1]]=rD[S0[3]]~=S0[0X7];end;end;else if g0<19 then if g0>=17 then if g0~=0X0012 then if rD[S0[0X1]]then KD=S0[3];end;else rD[S0[1]]=x(rD[S0[3]],rD[S0[0X0002]]);end;else(rD)[S0[0X1]]=rD[S0[0X3]][S0[7]];end;else if g0>=20 then do if g0==0X15 then if not(not rD[S0[0X001]])then else do KD=S0[0X3];end;end;else local MD=(S0[1]);rD[MD](rD[MD+0X1],rD[MD+2]);do LD=MD-0x0001;end;end;end;else local CE,qE=S0[0X1],rD[S0[0X003]];do(rD)[CE+0x1]=qE;end;do(rD)[CE]=qE[S0[7]];end;end;end;end;end;end;end;end;end;end;end);if not(YD)then if C(FD)~='\115\116\114\105ng'then c(FD,0);else if not(l(FD,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if not(l(FD,"^.-:%d+: "))then(c)(FD,0);else c('\076ur\097p\104\032\083c\114i\112\116\058'..(jf[KD-0x01]or'(in\116ern\097\108)')..": "..j(FD),0X0);end;end;else if FD then if hD~=1 then return rD[uD](M(rD,uD+0X1,LD));else return rD[uD]();end;elseif uD then return M(rD,uD,hD);end;end;end;if E then(E)(Yf,ff);end;do return Yf;end;end;Bp=0X000d;end;else if Bp<=0X0 then j=kp;Bp=0xC;else if Bp~=0X1 then jp={};do Bp=0X5;end;else do vp=function(on)local ln,Ln,fn=0X1,nil,(nil);while ln<=0X02 do do if not(ln<=0)then do if ln==1 then Ln=W();do ln=0X2;end;else do fn='';end;ln=0;end;end;else for d4=1,Ln,0X01f3d do local Y4=1;local E4=nil;repeat if Y4==0X0000 then do if not(E4>Ln)then else E4=Ln;end;end;break;else do E4=d4+0x00001f3d-0x01;end;do Y4=0x0;end;end;until(false);local O4=({T(y,U+d4-0X0001,U+E4-1)});for c0=0x00001,#O4 do local x0=0X0001;repeat do if x0~=0X0000 then do O4[c0]=x(O4[c0],f);end;x0=0;else f=(on*f+159)%0X100;break;end;end;until(false);end;fn=fn..Q(M(O4));end;ln=3;end;end;end;ln=0X1;repeat do if ln~=0X000 then U=U+Ln;ln=0;else return fn;end;end;until(false);end;end;Bp=9;end;end;end;until Bp>12;do Bp=1;end;local bp,Tp=nil,nil;while Bp<4 do if Bp<=1 then if Bp~=0x0 then function bp()local ke,ie,We,Ne,Ye=0X0006,nil,nil,nil,nil;while ke<=0X8 do if ke<=0X3 then if ke<=0X1 then do if ke==0 then ie={gp,gp,gp,nil,gp,gp,{},{},{}};ke=0x0008;else(ie)[6]=d();ke=3;end;end;else if ke==0X2 then(ie)[12]=w();ke=1;else ie[0X0000a]=w();ke=0X5;end;end;else if not(ke<=5)then do if ke<=0X0006 then ke=0;else if ke~=7 then We={};ke=7;else ie[0X0000b]=W();do ke=4;end;end;end;end;else if ke~=4 then Ye={};ke=0x9;else Ne={};ke=2;end;end;end;end;ke=2;local Oe,je=nil,(nil);do while ke~=0X3 do if ke<=0 then je=op;ke=1;else do if ke==0x00001 then(ie)[0X1]=h(Oe,0X1,0X1)~=0X00000;do ke=3;end;else do Oe=w();end;ke=0;end;end;end;end;end;ke=2;local we=(nil);while ke~=3 do if ke<=0X000 then ie[0x00012]=w();ke=0X1;else if ke~=1 then do ie[0X3]=h(Oe,2,0X0001)~=0X0000;end;ke=0;else do we=W()-0X1579d;end;ke=0X3;end;end;end;local me=(ie[9]);do ke=0X3;end;local He,Te,ve=nil,nil,nil;repeat if ke<=0X2 then do if ke<=0x0 then(ie)[14]=w();ke=0X001;else if ke~=0X1 then ve=w()~=0;do ke=6;end;else He=W()-0X15f07;ke=0X4;end;end;end;else if not(ke<=3)then do if ke==0X4 then Te=w();do ke=0X2;end;else(ie)[0Xa]=W();do ke=0;end;end;end;else do for MK=0X0,we-0X001 do(me)[MK]=bp();end;end;ke=0X05;end;end;until ke==0X00006;ke=1;local de=nil;do while ke<0X3 do do if not(ke<=0X0)then if ke==0x1 then for To=1,He do local Wo=(w());local wo,po=nil,(0x4);local jo=nil;while po<6 do do if not(po<=2)then if not(po<=3)then do if po~=4 then if Wo==0x00005A then wo=Vp;elseif Wo==0X000E6 then do wo=b(vp(Te),0X2);end;elseif Wo==75 then wo=R();elseif Wo==217 then wo=L();elseif Wo==0xb4 then wo=R();elseif Wo==39 then wo=true;elseif Wo==0X00009C then wo=b(vp(Te),2);elseif Wo==241 then wo=L();elseif Wo~=0X0f2 then else wo=L();end;po=2;else do(Ye)[To-1]=je;end;po=0X5;end;end;else do if not(ve)then else for ED=0x00,1 do if ED~=0X00 then Cp=Cp+0X01;else Kp[Cp]=jo;end;end;end;end;do po=6;end;end;else if not(po<=0)then do if po==1 then We[je]=jo;po=0;else jo={wo,{}};do po=0X00001;end;end;end;else je=je+1;po=0X3;end;end;end;end;end;do ke=0X002;end;else de=W();ke=0;end;else for Yj=1,de do local ej,Oj,Gj=nil,nil,(nil);local dj=(3);while dj<=0X03 do do if dj<=0X1 then if dj==0x0 then for NA=ej,Oj do ie[8][NA]=Gj;end;dj=0x00004;else Gj=W();dj=0;end;else do if dj==0x2 then Oj=W();dj=1;else ej=W();dj=2;end;end;end;end;end;end;ke=3;end;end;end;end;(ie)[0XF]=w();local ye=ie[0X007];ke=0;local ae=nil;do while ke~=2 do if ke==0X0 then ae=W()-11894;ke=1;else for fn=0X1,ae do ye[fn]={[7]=w(),[0X5]=w(),[1]=B(),[0X6]=d(),[0x4]=w(),[ep]=B(),[2]=B()};end;ke=0x0002;end;end;end;(ie)[0xC]=W();(ie)[2]=Ne;for Ce=1,d()do do(Ne)[Ce]={w(),d()};end;end;ke=0X3;do while(true)do if ke<=0X002 then if ke<=0 then ie[0X10]=w();ke=0x2;else if ke==0x0001 then do return ie;end;else(ie)[10]=W();ke=0x6;end;end;else if ke<=4 then do if ke==0X3 then ie[Ep]=d();ke=4;else(ie)[Jp]=W();ke=0;end;end;else if ke~=5 then(ie)[0x4]=d();ke=5;else for cU=0x01,ae do local VU=ie[0X007][cU];for xU,hU in dp(V)do local KU,eU=nil,(nil);local UU=(1);while UU<=2 do if not(UU<=0)then if UU~=0X001 then do eU=VU[KU];end;UU=0x00000;else KU=J[hU];do UU=0x02;end;end;else if eU==10 then local TP,eP=nil,(nil);for aT=0,2 do do if aT<=0 then TP=Ye[VU[hU]];else if aT~=1 then if eP then VU[KU]=eP[1];local Ki=(eP[0X2]);do(Ki)[#Ki+1]={VU,KU};end;end;else eP=We[TP];end;end;end;end;elseif eU~=1 then else do VU[hU]=cU+VU[hU]+0x01;end;end;UU=0X3;end;end;end;end;ke=0X00001;end;end;end;end;end;end;Bp=0X003;else do jp[0X03]=Kp;end;do Bp=0X2;end;end;else if Bp~=2 then do Tp=bp();end;Bp=0X0;else do Kp=gp;end;do Bp=4;end;end;end;end;return cp(Tp,nil,P)(...);end)(12,1,0X06,0x0000D,9,0X0b,0X8,0XA,pcall,next,0x3,0X000F,"\114\115h\105\102t",coroutine.yield,16,string,nil,coroutine.wrap,string.char,string.sub,2,0X000e,"band","bx\111r",ipairs,0X0,string.rep,'ls\104if\116',select,false,"\098\110\111t",0X05,7,4,rawget,bit,'bor',tostring,bit32,setfenv,...);
